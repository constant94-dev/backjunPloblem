#---자료구조 카드2 백준 2164번

# 아이디어
# 1번 부터 N번 까지 N장의 카드가 있다.
# 1번이 가장 위 N번이 가장 아래 순서로 놓여있다.
# 첫번째 가장 위 카드를 버린다.
# 두번째 가장 위 카드를 가장 아래로 옮긴다.
# 세번째 가장 위 카드를 버린다.
# 네번재 가장 위 카드를 가장 아래로 옮긴다.
# 위 내용을 카드가 한 장 남을 때 까지 반복한다.
# 남은 카드 한 장을 출력한다.
# 하나의 반복문을 사용한다.
# 반복 횟수가 홀수일 때 가장 위 카드를 버린다.
# 반복 횟수가 짝수일 때 가장 위 카드를 가장 아래로 옮긴다.
# 위 내용을 반복한다.
# 반복문의 종료조건은 카드가 한 장 남을 때이다.

# 시간복잡도
# O(N)

# 자료구조
# 카드 장 수 int N
# 카드 관리를 위한 deque queue

# 틀렸습니다.
# 위와 같은 실패 원인이 출력된다. 왜 그런지 알아보았다.
# 1. 배열에 값을 잘못 넣었거나 잘못된 index에 넣어서 배열을 잘못 만든 경우
# 2. 데이터형 범위를 체크하지 않은 경우
# Int형과 unsigned long long형은 가능한 수의 범위가 크게 차이난다. 문제를 봤을 때 수가 매우 커질 것 같으면 타입을 바꿔주자.
# 3. 수학적인 부분 
# 특히 나눈 결과를 올바른 타입으로 나타내었는지 확인해주자. int / int는 몫만 나오게 된다.
# 4. 출력을 잘못한 경우
# 생각보다 자주 나오는 케이스다. 출력 초과랑은 다른 경우인데, 가령 출력을 "true" 또는 "false"로 나타내야하는데 "TRUE" 또는 "FALSE"로 나타내면 틀리게 된다.
# 5. 조건을 틀린 경우
# 특히 특정 범위 내에서 해결해야 하는 문제이면, 예를 들어 n = 0 ~ n = 100000 까지 돌아야하는 문제이면 최대값도 넣어보자. 계산이 올바르게 되었다고 해도, 형 범위가 넘었거나 기타 다른 문제에 의해 틀린 결과가 나올 수 있다.
# 또는 문제를 잘못 읽었을 수도 있으니 다시 한번 읽어서 빠진 조건이 있는지 다 체크해보자. 백준에 질문 검색 란이 있는데, 여러가지 테스트 케이스가 올라오니 참고하는 것도 좋다.
# 6. while문 같은 루프문을 쓸 경우
# 조건이 제대로 카운트 되지 않아서 무한루프가 발생하는지, 혹은 의도한대로 카운트가 되는지 체크해주자.
# 초기 작성한 내 코드는 5번과 6번 조건의 걸려서 수정 후 다시 제출하니 성공 하게되었다.

import sys
from collections import deque
input = sys.stdin.readline

N = int(input())
queue=deque([i for i in range(1, N+1)])

while len(queue)>1:
    queue.popleft() # 가장 위 카드 삭제    
    queue.append(queue.popleft()) # 가장 위 카드를 가장 아래로 옮긴다
print(queue[0])
